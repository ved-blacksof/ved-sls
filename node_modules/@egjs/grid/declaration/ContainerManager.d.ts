import Component from "@egjs/component";
import { DestroyOptions } from ".";
import { DOMRect } from "./types";
export interface ContainerManagerOptions {
    horizontal?: boolean;
    autoResize?: boolean;
    resizeDebounce?: number;
    maxResizeDebounce?: number;
}
export interface ContainerManagerStatus {
    rect: DOMRect;
}
export interface ContainerManagerEvents {
    resize: void;
}
export declare class ContainerManager extends Component<ContainerManagerEvents> {
    protected container: HTMLElement;
    protected options: Required<ContainerManagerOptions>;
    protected rect: DOMRect;
    protected orgCSSText: string;
    private _resizeTimer;
    private _maxResizeDebounceTimer;
    constructor(container: HTMLElement, options: ContainerManagerOptions);
    resize(): void;
    getRect(): DOMRect;
    setRect(rect: DOMRect): void;
    getInlineSize(): number;
    getContentSize(): number;
    getStatus(): {
        rect: {
            width?: number;
            height?: number;
            top?: number;
            left?: number;
        };
    };
    setStatus(status: ContainerManagerStatus): void;
    setContentSize(size: number): void;
    destroy(options?: DestroyOptions): void;
    private _init;
    private _onResize;
    private _scheduleResize;
}
