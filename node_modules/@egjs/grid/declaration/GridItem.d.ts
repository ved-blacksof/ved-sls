import { DOMRect, GridRect } from "./types";
import { MOUNT_STATE, UPDATE_STATE } from "./consts";
export interface GridItemStatus {
    key?: string | number;
    element?: HTMLElement | null;
    mountState?: MOUNT_STATE;
    updateState?: UPDATE_STATE;
    isFirstUpdate?: boolean;
    attributes?: Record<string, string>;
    orgCSSText?: string;
    orgRect?: Required<DOMRect>;
    rect?: Required<DOMRect>;
    cssRect?: DOMRect;
    data?: Record<string, any>;
    gridData?: Record<string, any>;
}
declare class GridItem {
    protected horizontal: boolean;
    isUpdate: boolean;
    hasTransition: boolean;
    transitionDuration: string;
    constructor(horizontal: boolean, itemStatus?: Partial<GridItemStatus>);
    get orgInlineSize(): number;
    get orgContentSize(): number;
    get inlineSize(): number;
    get contentSize(): number;
    get cssInlineSize(): number;
    get cssContentSize(): number;
    get cssInlinePos(): number;
    get cssContentPos(): number;
    set cssInlinePos(inlinePos: number);
    set cssContentPos(contentPos: number);
    set cssInlineSize(inlineSize: number);
    set cssContentSize(contentSize: number);
    setCSSGridRect(gridRect: GridRect): void;
    getStatus(): Required<GridItemStatus>;
    getMinimizedStatus(): Partial<GridItemStatus>;
}
interface GridItem extends Required<GridItemStatus> {
}
export { GridItem };
