import Grid from "../Grid";
import { PROPERTY_TYPE } from "../consts";
import { GridOptions, Properties, GridOutlines, GridRect } from "../types";
import { GridItem } from "../GridItem";
export interface FrameRect extends Required<GridRect> {
    type: any;
}
export interface FrameGridOptions extends GridOptions {
    frame?: number[][];
    useFrameFill?: boolean;
    rectSize?: number | {
        inlineSize: number;
        contentSize: number;
    };
}
export declare class FrameGrid extends Grid<FrameGridOptions> {
    static propertyTypes: {
        frame: PROPERTY_TYPE;
        useFrameFill: PROPERTY_TYPE;
        rectSize: PROPERTY_TYPE;
        gap: PROPERTY_TYPE;
        defaultDirection: PROPERTY_TYPE;
        renderOnPropertyChange: PROPERTY_TYPE;
        preserveUIOnDestroy: PROPERTY_TYPE;
        useFit: PROPERTY_TYPE;
    };
    static defaultOptions: Required<FrameGridOptions>;
    applyGrid(items: GridItem[], direction: "start" | "end", outline: number[]): GridOutlines;
    protected getRectSize(frameInlineSize: number): {
        inlineSize: number;
        contentSize: number;
    };
    private _getFrame;
    private _findRect;
}
export interface FrameGrid extends Properties<typeof FrameGrid> {
}
