import Grid from "../Grid";
import { PROPERTY_TYPE } from "../consts";
import { GridOptions, Properties, GridOutlines } from "../types";
import { GridItem } from "../GridItem";
export interface JustifiedGridOptions extends GridOptions {
    columnRange?: number | number[];
    rowRange?: number | number[];
    sizeRange?: number | number[];
    displayedRow?: number;
    isCroppedSize?: boolean;
}
export declare class JustifiedGrid extends Grid<JustifiedGridOptions> {
    static propertyTypes: {
        columnRange: PROPERTY_TYPE;
        rowRange: PROPERTY_TYPE;
        sizeRange: PROPERTY_TYPE;
        isCroppedSize: PROPERTY_TYPE;
        displayedRow: PROPERTY_TYPE;
        gap: PROPERTY_TYPE;
        defaultDirection: PROPERTY_TYPE;
        renderOnPropertyChange: PROPERTY_TYPE;
        preserveUIOnDestroy: PROPERTY_TYPE;
        useFit: PROPERTY_TYPE;
    };
    static defaultOptions: Required<JustifiedGridOptions>;
    applyGrid(items: GridItem[], direction: "start" | "end", outline: number[]): GridOutlines;
    private _getRowPath;
    private _getRowLink;
    private _searchRowLink;
    private _getExpectedRowSize;
    private _getExpectedInlineSize;
    private _getCost;
    private _getPath;
    private _setStyle;
    private _getRowRange;
    private _getColumnRange;
    private _getSizeRange;
}
export interface JustifiedGrid extends Properties<typeof JustifiedGrid> {
}
